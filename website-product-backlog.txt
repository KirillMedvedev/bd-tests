WebSite product backlog

I - independent
N - negotiable
V - valuable (for end-users and customers)
E - estimatable
S - small
T - testable


Роли:
архитектор
программист
=========================================================== Release 1 ==================================================================================================
13 Как программист и архитектор, я хочу наглядно видеть, как мои тесты выглядят в конечном итоге, для того, чтобы заинтересоваться, и продолжать читать сайт дальше
   Acceptance tests:
   1) Сайт существует по адресу
   2) На сайте показаны структура проекта и тест
   3) Легкое напоминание No Cost
   
   Tasks:
   1) DONE: Зарегестрировать сайт
   2) Написать содержимое сайта (сделать картинку и текст кода теста)
   3) Сделать станицу, чтобы адекватно реагировала на ресайз
   4) Применить синтакс хайлайтер, чтобы код теста был цветным
   5) Сделать верхний футер, разместив имя проекта
   6) Стырить стили из известных сайтов, например, нугет
      
8 Как архитектор и программист, я хочу понимать, какие именно проблемы решит этот подход, чтобы перевести команду на использование этого подхода
   Acceptance tests:
   1) BDD usage on Unit Level
   2) Arrange - Act - Assert materialization
   3) multiple asserts - localization of problems
   4) Code reuse: Reuse Given for many whens, and when for many thens
   5) Establishing structure for Arrange Act Assert Cleanup
   6) No cost! (no need to learn libraries, only use template method)
   
   Tasks:
   1) Написать текст всех проблем, которые решаются (в ворде)
   2) Сделать структуру на странице, чтобы отличать часть с рекламой о проекте от части с мотивацией (эта US)

3 Как программист, я хочу скачать темплейты на решарпер, для того, чтобы повысить продуктивность создания тестов
   Acceptance tests:
   1) Ссылка с темплейтом скачивает темплейт локально
   
   Tasks:
   1) Создать на странице место, где будет ссылка на темплейт, Залить темплейт на сайт и сослаться на него
   
2 Как программист, я хочу иметь ссылку на нугет пакет, чтобы подключить библиотеку к проекту
   Acceptance tests:
   1) Имя пакета доступно на сайте (install package)

5 Как разработчик сайта, я хочу иметь copyright, для того, чтобы информацию с моего сайта не тырили от имени другого
   Acceptance tests:
   1) Copyright находится внизу сайта
   Tasks:
   1) Изучить разные копирайты на сайтах, выбрать нужный
   2) Сделать нижний футер со ссылкой
   
========================================================================================================================================================================

   


Как программист и архитектор, я хочу иметь статью с пошаговой инструкцией, как написать базовый тест с нуля
   
Как программист, я хочу видеть описание темплейтов на решарпер, для того, чтобы понимать, какие темплейты доступны   
   
Как прогрммист, я хочу глубоко понимать философию, как этот подход появился (Documentation), для того, чтобы быть уверенным, как его использовать
   Acceptance tests:
   1) Статья, которая находится на kirillmedvedev.com, доработана до конца (критерий - минимум груза, покрытие 80% профита)
   2) На основной странице сайта есть ссылка на пояснение в нескольких местах
   
   
Как программист, я хочу иметь доступ к исходному коду проекта
   Acceptance tests:
   1) На основной странице есть ссылка на github
   
Как разработчик сайта, я хочу иметь страницу about для того, чтобы себя распиарить, и дать форму обратной связи для спец предложений

Как программист, я хочу иметь способ обратной связи с создателями проекта для того, чтобы понять, как использовать подход, осведомить о багах и предложить новые идеи

Как программист, я хочу иметь возможность скачать dll и sourcre code последней версии проекта, чтобы не мучаться с другими способами получения этой информации.

Как разработчик сайта, я хочу иметь реферал с reshaper, для того, чтобы получить халявную лицензию на решарпер, и лучше индексироваться в Google

Как программист, я хочу понимать разницу и сравнение этого подхода со SpecFlow

Как программист, я хочу понимать, как делать Test First с помощью этого подхода (раздел использования TDD в рамках bd-tests подхода)

Как программист, я хочу скачать темплейты на Visual Studio, чтобы повысить продуктивность создания тестов, не используя решарпер